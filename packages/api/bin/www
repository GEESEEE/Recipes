#!/usr/bin/env node
'use strict'

const debug = require('debug')('arora-api:server')
const http = require('http')

let port, server
require('../dist/index').default.then(app => {

    port = normalizePort(process.env.PORT || '3000')
    app.set('port', port)

    server = http.createServer(app)
    server.on('error', onError)
    server.on('listening', onListening)
    server.listen(port)

    console.log("Running")
})

function normalizePort (val) {
    const port = parseInt(val, 10)
    if (isNaN(port)) {
        return val
    }
    if (port >= 0) {
        return port
    }
    return false
}

function onError (error) {
    if (error.syscall !== 'listen') {
        throw error
    }

    const bind = typeof port === 'string' ? 'Pipe ' + port : 'Port ' + port
    switch (error.code) {
    case 'EACCES':
        console.error(bind + ' requires elevated privileges')
        process.exit(1)
    case 'EADDRINUSE':
        console.error(bind + ' is already in use')
        process.exit(1)
    default:
        throw error
    }
}

function onListening () {
    const addr = server.address()
    const bind = typeof addr === 'string' ? 'pipe ' + addr : 'port ' + addr.port
    debug('Listening on ' + bind)
}
